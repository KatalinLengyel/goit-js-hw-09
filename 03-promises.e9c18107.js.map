{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAItC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAElCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE5BA,EAAM,G,CAXbL,EAAOY,iBAAiB,UAexB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOhB,EAAOK,MAAMY,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAOmB,OAAOF,MAAOC,IACxCf,EAAce,EAAGH,GAChBK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,MAAU,IAEzEmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAoBrB,QAAeC,MAAU,IAEzEU,GAASC,OAAOhB,EAAO0B,KAAKT,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\nformEl.addEventListener(\"submit\", onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        }\n    }, delay);\n  });\n};\n\nfunction onSubmitForm(entry) {\n  entry.preventDefault();\n  let delay = Number(formEl.delay.value);\n\n  for (let i = 1; i <= formEl.amount.value; i++) {\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  delay += Number(formEl.step.value);  \n  };\n};"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","entry","preventDefault","delay1","Number","value","i","amount","then","$parcel$interopDefault","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.e9c18107.js.map"}